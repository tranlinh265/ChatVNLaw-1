import React, { Component } from 'react';
import { log } from 'util';
import '../assets/styles/common/demowebrtc.css';
import $ from 'jquery';

import PubNub from 'pubnub';
import PubNubReact from 'pubnub-react';

import { compile } from 'path-to-regexp';

// var pubnub = new PubNub({
//     publishKey: 'pub-c-9d0d75a5-38db-404f-ac2a-884e18b041d8',
//     subscribeKey: 'sub-c-4e25fb64-37c7-11e5-a477-0619f8945a4f',
//     uuid: '0K0a7kCxqhSfKN5iJ1oNiLShqSt1',
// })

var conf =  require('./web-rtc');
var PHONE = conf.WebRTC;

var _stream;
var pub_key = 'pub-c-9d0d75a5-38db-404f-ac2a-884e18b041d8';
var sub_key = 'sub-c-4e25fb64-37c7-11e5-a477-0619f8945a4f';
var standby_suffix = '-stdby';
var userId = '0K0a7kCxqhSfKN5iJ1oNiLShqSt1';
var callUser = '';
class DemoWebRtc extends Component {
    constructor(props) {
        super(props);
        this.pubnub = new PubNubReact({
            publishKey: pub_key,
            subscribeKey: sub_key,
            uuid : '0K0a7kCxqhSfKN5iJ1oNiLShqSt1',
        });
        this.phone = PHONE({
            number        : '0K0a7kCxqhSfKN5iJ1oNiLShqSt1-stdby' || "Anonymous", // listen on username line else Anonymous
            publish_key   : 'pub-c-9d0d75a5-38db-404f-ac2a-884e18b041d8', // Your Pub Key
            subscribe_key : 'sub-c-4e25fb64-37c7-11e5-a477-0619f8945a4f', // Your Sub Key
            autocam : false,
        });	
        this.pubnub.init(this);
        this.video_out= null;
    }
	
	login(){
		var userIdStd = userId + standby_suffix;
		var pubnub = window.pubnub = pubnub({
			publishKey: pub_key,
			subscribe: sub_key,
			uuid: userId
		});
		pubnub.subscribe({
			channel: userIdStd,
			message : incommingCall,
		});
		return false;	
	}
	
	phoneStart(){
		var phone = window.phone = PHONE({
			number: userId,
			publish: pub_key,
			subscribe: sub_key,
		});
		phone.ready(function(){
		
		});
		phone.receive(function(session){
			session.connected(function(session){
				// add stream to video element
			});
			session.ended(function(session){
				// clear video.src
			});
		});
	}
	
	makeCall(){
		var callUserStd = callUser + standby_suffix;
		var msg = {"call_user": userId, "call_time": new Date().getMilliseconds()};
		window.pubnub.publish({
			channel: callUserStd,
			message: msg,
		});
		if(!window.phone) this.phoneStart();
	}
	
	incommingCall(m){
		if(!window.phone) this.phoneStart();
		window.phone.dial(m['call_user']);
	}
	
	endCall(){
		if(window.phone) window.phone.hangup();
	}
	
	
    componentWillMount() {
        var component = this;
    }
 
    componentWillUnmount() {
        this.pubnub.unsubscribe({
            channels: ['channel1']
        });
    }
 
    componentDidMount(){
        var yourVideo = document.getElementById("yourVideo");
    }
    
    render(){
        return(
            <div>
                <video id="yourVideo" autoplay muted playsinline></video>
                <video id="friendsVideo" autoplay></video>
                <button onClick={this.makeCall.bind(this)}>make call</button>
            </div>
        )
    }
}

export default DemoWebRtc;