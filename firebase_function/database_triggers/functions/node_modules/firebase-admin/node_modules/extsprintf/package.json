{
  "_from": "extsprintf@1.3.0",
  "_id": "extsprintf@1.3.0",
  "_inBundle": false,
  "_integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
  "_location": "/firebase-admin/extsprintf",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "extsprintf@1.3.0",
    "name": "extsprintf",
    "escapedName": "extsprintf",
    "rawSpec": "1.3.0",
    "saveSpec": null,
    "fetchSpec": "1.3.0"
  },
  "_requiredBy": [
    "/firebase-admin/jsprim",
    "/firebase-admin/verror"
  ],
  "_resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
  "_shasum": "96918440e3041a7a414f8c52e3c574eb3c3e1e05",
  "_shrinkwrap": null,
  "_spec": "extsprintf@1.3.0",
  "_where": "/home/linhtm/Work_Space/react/ChatVNLaw-1/firebase_function/database_triggers/functions/node_modules/firebase-admin",
  "bin": null,
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Stripped down version of s[n]printf(3c).  We make a best effort to throw an exception when given a format string we don't understand, rather than ignoring it, so that we won't break existing programs if/when we go implement the rest of this.",
  "devDependencies": {},
  "engines": [
    "node >=0.6.0"
  ],
  "name": "extsprintf",
  "optionalDependencies": {},
  "peerDependencies": {},
  "scripts": {},
  "version": "1.3.0"
}
